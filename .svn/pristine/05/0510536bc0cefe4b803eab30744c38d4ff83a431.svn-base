<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/jdbc
           http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.heimdall"/>
	
	<!--  Fixes the @Secured Annotations in controller : http://stackoverflow.com/questions/2375753/spring-security-3-spring-mvc-and-the-dreaded-secured-requestmapping -->
	<global-method-security proxy-target-class = "true" secured-annotations="enabled"/>
	

    <http auto-config="true">
		 <form-login authentication-success-handler-ref="authenticationSuccessHandler"
		 			 authentication-failure-handler-ref="authenticationFailureHandler" />
                <intercept-url pattern="/**"/>
<!--         		<intercept-url pattern="/Admin/index*" access="ROLE_ADMIN" /> -->
<!--         <form-login login-page="/login" default-target-url="/User/index" authentication-failure-url="/loginfailed" /> -->
        <logout logout-success-url="/logout" />
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref ="userDetailsService">
<!--             <user-service> -->
<!--                 <user name="test" password="test" authorities="ROLE_USER" /> -->
<!--             </user-service> -->
<!--             <jdbc-user-service data-source-ref="dataSource" -->
<!--             	users-by-username-query=" -->
<!-- 		      		select USERNAME as username, PASSWORD as password, ENABLED as enabled from USERS where USERNAME= ?" -->
<!-- 				authorities-by-username-query=" -->
<!-- 		     		select u.USERNAME as username, ur.ROLE as authority from USER_ROLE ur  -->
<!-- 		     		JOIN USER u on ur.USER_ROLE_ID = u.ROLE -->
<!-- 		     		where u.USERNAME = ?" /> -->
			<password-encoder hash="plaintext"/>
         </authentication-provider>
     </authentication-manager>
</beans:beans>