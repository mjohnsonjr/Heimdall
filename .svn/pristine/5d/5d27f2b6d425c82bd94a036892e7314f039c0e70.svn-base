package com.heimdall.dao.model;

import javax.persistence.AttributeOverride;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Hibernate database object that is mapped to the USER table in the MySQL database.  Object will be filled when
 * the UserService calls the loadUser(String username) method and queries the connected MySQL database.
 * @author michael
 *
 */

@Entity
@Table(name = "USER")
@AttributeOverride(name="id", column=@Column(name = "USER_ID"))
public class User extends BaseModel{
	
	private UserRole role;
	private String personName; /* Change to more enforced name model object */
	private String login;
	private String password;
	
	
	@ManyToOne(cascade = CascadeType.PERSIST)
	@JoinColumn(name = "ROLE", nullable = false)
	public UserRole getRole() {
		return role;
	}

	@Column(name = "PERSON_NAME", nullable = false)
	public String getPersonName() {
		return personName;
	}

	@Column(name = "LOGIN", unique = true, nullable = false)
	public String getLogin() {
		return login;
	}

	@Column(name = "PASSWORD", nullable = false)
	public String getPassword() {
		return password;
	}

	public void setRole(UserRole role) {
		this.role = role;
	}

	public void setPersonName(String name) {
		this.personName = name;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	public void setPassword(String password) {
		this.password = password;
	}
}
